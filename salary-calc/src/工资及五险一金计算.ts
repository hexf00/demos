
interface I缴纳比例 {
  养老: number
  医疗: number
  失业: number
  工商: number
  生育: number
  公积金: number
}


const 上海2021企业五险一金缴纳基数: I缴纳比例 = {
  养老: 16,
  医疗: 10.5,
  失业: 0.5,
  工商: 0.16, // 0.16~1.52
  生育: 0, //与医疗在一起
  公积金: 7,
}

const 上海2021个人五险一金缴纳基数: I缴纳比例 = {
  养老: 8,
  医疗: 2,
  失业: 0.5,
  工商: 0,//个人不缴
  生育: 0,//个人不缴
  公积金: 7,
}




class 工资计算 {

  constructor(private 企业缴纳比例: I缴纳比例, private 个人缴纳比例: I缴纳比例) {

  }

  计算基数比例之和(缴纳比例: I缴纳比例) {
    return Object.values(缴纳比例).reduce((比例之和, 比例) => {
      比例之和 += 比例
      return 比例之和
    }, 0) / 100
  }

  计算公司成本(缴纳基数: number) {
    return 缴纳基数 + 缴纳基数 * this.计算基数比例之和(this.企业缴纳比例)
  }

  计算到手收入(缴纳基数: number) {
    return 缴纳基数 - 缴纳基数 * this.计算基数比例之和(this.个人缴纳比例)
  }

  计算公积金(缴纳基数: number) {
    return 缴纳基数 * ((this.个人缴纳比例.公积金 + this.企业缴纳比例.公积金) / 100)
  }

  输出报告(税前工资: number, 缴纳基数: number) {
    console.log(`税前工资为：${税前工资} , 缴纳基数为：${缴纳基数} 时`)

    const 岗位工资 = 税前工资 - 缴纳基数
    const 每月公司成本 = 岗位工资 + Math.ceil(this.计算公司成本(缴纳基数))
    const 每月个人到手 = 岗位工资 + Math.ceil(this.计算到手收入(缴纳基数))
    const 每月公积金 = Math.ceil(this.计算公积金(缴纳基数))
    console.log(`每月企业成本为：${每月公司成本} , 年成本为：${每月公司成本 * 12}。`)
    console.log(`每月个人到手为：${每月个人到手} , 年到手为：${每月个人到手 * 12}。`)
    console.log(`每月公积金为：${每月公积金} , 年公积金为：${每月公积金 * 12}。`)
    console.log(`每月个人到手(含公积金)为：${每月个人到手 + 每月公积金} , 年到手为：${(每月个人到手 + 每月公积金) * 12}。`)
    console.log('------------------------')
  }
}

const 上海2021工资计算 = new 工资计算(上海2021企业五险一金缴纳基数, 上海2021个人五险一金缴纳基数)

上海2021工资计算.输出报告(18000, 18000)
上海2021工资计算.输出报告(20000, 20000)
// 上海2021工资计算.输出报告(30000)


上海2021工资计算.输出报告(24000, 5000)


上海2021工资计算.输出报告(24000, 8000)